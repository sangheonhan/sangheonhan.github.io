<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PHP on Minimalist Programmer</title>
    <link>https://sangheonhan.github.io/tags/php/</link>
    <description>Recent content in PHP on Minimalist Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 08 Jan 2019 11:00:26 +0000</lastBuildDate><atom:link href="https://sangheonhan.github.io/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP로 원격 호스트에 CLI 커맨드 실행법</title>
      <link>https://sangheonhan.github.io/php%EB%A1%9C-%EC%9B%90%EA%B2%A9-%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%97%90-cli-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EC%8B%A4%ED%96%89%EB%B2%95/</link>
      <pubDate>Tue, 08 Jan 2019 11:00:26 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php%EB%A1%9C-%EC%9B%90%EA%B2%A9-%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%97%90-cli-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EC%8B%A4%ED%96%89%EB%B2%95/</guid>
      <description>원격 호스트에 명령을 실행하기 위해서는 우선 SSH 키를 통한 연결이 필요합니다. SSH 키를 연결하는 방법은 오픈튜토리얼스의 강좌 참고하시면 됩니다. 우선 SSH 라이브러리</description>
    </item>
    
    <item>
      <title>PHP 배열 세가지: Array, SplFixedArray, Judy Array</title>
      <link>https://sangheonhan.github.io/php-%EB%B0%B0%EC%97%B4-%EC%84%B8%EA%B0%80%EC%A7%80-array-splfixedarray-judy-array/</link>
      <pubDate>Wed, 12 Jul 2017 12:33:08 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php-%EB%B0%B0%EC%97%B4-%EC%84%B8%EA%B0%80%EC%A7%80-array-splfixedarray-judy-array/</guid>
      <description>PHP를 사용하면서 배열(Array)를 사용하지 않는 경우란 매우 드물겁니다. 배열(Array)와 사전(Dictionary)로 구별하는 Perl이</description>
    </item>
    
    <item>
      <title>PEAR: Console_CommandLine</title>
      <link>https://sangheonhan.github.io/pear-console_commandline/</link>
      <pubDate>Mon, 27 Apr 2015 22:19:29 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/pear-console_commandline/</guid>
      <description>설치 Console_CommandLine 패키지는 명령행 인자를 파싱하는 PEAR 라이브러리입니다. 컴포져를 이용해서 설치하려면 composer.json에 다음 내용을 알맞은 위치에 추가하면 됩</description>
    </item>
    
    <item>
      <title>PEAR: Log</title>
      <link>https://sangheonhan.github.io/pear-log/</link>
      <pubDate>Mon, 20 Apr 2015 22:44:46 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/pear-log/</guid>
      <description>기본사용법 대부분의 프로그래밍 언어는 여러 모듈과 라이브러리를 관리하기 위한 시스템을 가지고 있다. PHP는 PEAR(PHP Extension and Application Repository)라는 시스템을 가</description>
    </item>
    
    <item>
      <title>PHP 내부 동작 들여다보기</title>
      <link>https://sangheonhan.github.io/php-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EB%93%A4%EC%97%AC%EB%8B%A4%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Wed, 13 Nov 2013 11:50:33 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EB%93%A4%EC%97%AC%EB%8B%A4%EB%B3%B4%EA%B8%B0/</guid>
      <description>gcc 컴파일러는 -S 옵션을 이용해 어셈블리어로 실제 C 언어의 내부 동작을 살펴 볼 수 있다. 하지만 PHP는 기본적으로 그러한 기능이 없으나, pthreads 모듈을 만든 Joe Watk</description>
    </item>
    
    <item>
      <title>월의 몇 주차인지 계산하기</title>
      <link>https://sangheonhan.github.io/%EC%9B%94%EC%9D%98-%EB%AA%87-%EC%A3%BC%EC%B0%A8%EC%9D%B8%EC%A7%80-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 03 Jan 2013 23:00:16 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/%EC%9B%94%EC%9D%98-%EB%AA%87-%EC%A3%BC%EC%B0%A8%EC%9D%B8%EC%A7%80-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/</guid>
      <description>평소 크게 신경을 쓰던 문제는 아닌데 이번에 관련 작업을 하면서 이게 간단한 문제는 아니라는 것을 알게 됐다. 이 문제가 어려운 이유는 그 해의 몇 주차인지에 대해서는 ISO 표</description>
    </item>
    
    <item>
      <title>보다 빠른 echo를 위하여</title>
      <link>https://sangheonhan.github.io/%EB%B3%B4%EB%8B%A4-%EB%B9%A0%EB%A5%B8-echo%EB%A5%BC-%EC%9C%84%ED%95%98%EC%97%AC/</link>
      <pubDate>Sat, 01 Dec 2012 03:30:04 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/%EB%B3%B4%EB%8B%A4-%EB%B9%A0%EB%A5%B8-echo%EB%A5%BC-%EC%9C%84%ED%95%98%EC%97%AC/</guid>
      <description>PHP 언어에서 print 보다 echo가 빠르다는 것은 널리 알려진 사실이다. 이런 차이는 print의 경우 반환값이 존재하기 때문인데, 물론 이런 반환값 때문에 수식 내에서</description>
    </item>
    
    <item>
      <title>PHP: 클래스 매직메소드 __get(), __set() 문제</title>
      <link>https://sangheonhan.github.io/php-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%A4%EC%A7%81%EB%A9%94%EC%86%8C%EB%93%9C-__get-__set-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 26 Nov 2012 03:30:26 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%A4%EC%A7%81%EB%A9%94%EC%86%8C%EB%93%9C-__get-__set-%EB%AC%B8%EC%A0%9C/</guid>
      <description>매직메소드 __get, __set에 대해서는 크게 두가지 의견이 있는데, 하나는 OO를 해치기 때문에 getter, setter를 정의해서 사용하라는 것이고, 또다른 하나는 스크립</description>
    </item>
    
    <item>
      <title>PHP로 서버(데몬) 만들기</title>
      <link>https://sangheonhan.github.io/php%EB%A1%9C-%EC%84%9C%EB%B2%84%EB%8D%B0%EB%AA%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Tue, 25 Sep 2012 03:30:20 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php%EB%A1%9C-%EC%84%9C%EB%B2%84%EB%8D%B0%EB%AA%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>PHP는 웹에 특화된 언어다. 그렇게 때문에 애플리케이션이나 시스템 프로그래밍을 할 때 필요한 기능이 부족하다. 하지만 서비스를 만들다 보면 서버(데몬)처럼 웹</description>
    </item>
    
    <item>
      <title>PHP로 지리좌표계 변환하기</title>
      <link>https://sangheonhan.github.io/php%EB%A1%9C-%EC%A7%80%EB%A6%AC%EC%A2%8C%ED%91%9C%EA%B3%84-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 03 Jul 2012 11:29:23 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php%EB%A1%9C-%EC%A7%80%EB%A6%AC%EC%A2%8C%ED%91%9C%EA%B3%84-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0/</guid>
      <description>개발자들이 지리좌표계 내지는 지리정보를 다뤄야 할 일이 점점 많아지고 있습니다. 특히 모바일처럼 위치 정보를 손쉽게 얻을 수 있는 장비가 널리 보급이 되면서 웬만한 앱</description>
    </item>
    
    <item>
      <title>PHP 클래스 매직메소드 __get(), __set() 예제</title>
      <link>https://sangheonhan.github.io/php-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%A4%EC%A7%81%EB%A9%94%EC%86%8C%EB%93%9C-__get-__set-%EC%98%88%EC%A0%9C/</link>
      <pubDate>Tue, 24 Jan 2012 00:58:36 +0000</pubDate>
      
      <guid>https://sangheonhan.github.io/php-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%A4%EC%A7%81%EB%A9%94%EC%86%8C%EB%93%9C-__get-__set-%EC%98%88%EC%A0%9C/</guid>
      <description>PHP에는 __get(), __set()이란 특별한 매직메소드가 있습니다. 이 매직메소드의 사용에 대해서 여러 논란이 있기는 하지만, 개인적으로 적절히 사용을 한다면 매우</description>
    </item>
    
  </channel>
</rss>
